name: Build AmneziaWG packages

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

permissions:
  contents: write

env:
  owr_branch: "openwrt-24.10.1"
  gl_version: "4.7.5"
  gl_vermagic: "9469a6c8c449c47e503c05678ea1559d"
  kernel_version: "6.6.86"

jobs:
  detect-commit:
    runs-on: ubuntu-latest
    outputs:
      owr_commit: ${{ steps.find.outputs.owr_commit }}
    steps:
      - name: Checkout OpenWRT
        uses: actions/checkout@v4
        with:
          repository: openwrt/openwrt
          ref: ${{ env.owr_branch }}
          path: owrt

      - name: Find matching kernel commit
        id: find
        run: |
          cd owrt
          git fetch origin
          FILE="include/kernel-version.mk"
          LINE=$(grep -n "${{ env.kernel_version }}.*${{ env.gl_vermagic }}" "$FILE" | cut -d: -f1)

          if [ -z "$LINE" ]; then
            echo "ERROR: Kernel version with vermagic not found"
            exit 1
          fi

          COMMIT=$(git blame -L ${LINE},${LINE} $FILE | awk '{print $1}')
          echo "Found commit: $COMMIT"
          echo "owr_commit=$COMMIT" >> $GITHUB_OUTPUT

  build:
    needs: detect-commit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Configs
        uses: actions/checkout@v4
        with:
          path: gl

      - name: Checkout AmneziaWG
        uses: actions/checkout@v4
        with:
          path: awg
          repository: amnezia-vpn/amneziawg-openwrt

      - name: Checkout OpenWRT
        uses: actions/checkout@v4
        with:
          path: owrt
          repository: openwrt/openwrt
          ref: ${{ env.owr_branch }}
          fetch-depth: 0

      - name: Build OpenWRT Kernel
        run: |
          cd owrt
          echo ">>> Checkout commit"
          git reset --hard ${{ needs.detect-commit.outputs.owr_commit }}

          mkdir -p ./package/awg
          cp -a ../awg/. ./package/awg/

          ./scripts/feeds update -a
          ./scripts/feeds install -a

          cp ../gl/config_${{ env.gl_version }}.buildinfo .config
          echo "CONFIG_PACKAGE_kmod-amneziawg=m" >> .config
          echo "CONFIG_PACKAGE_amneziawg-tools=y" >> .config
          echo "CONFIG_PACKAGE_luci-proto-amneziawg=y" >> .config
          make defconfig

          sed -i 's/grep '\''=\[ym\]'\'' \$(LINUX_DIR)\/\.config\.set | LC_ALL=C sort | \$(MKHASH) md5 > \$(LINUX_DIR)\/\.vermagic.*/echo "${{ env.gl_vermagic }}" > \$(LINUX_DIR)\/\.vermagic/' ./include/kernel-defaults.mk

          make tools/install
          make toolchain/install
          make target/linux/{clean,compile} -i -j$(nproc) V=s

          VERMAGIC=$(cat ./build_dir/target-*/linux-*/linux-*/.vermagic)
          if [ "$VERMAGIC" != "${{ env.gl_vermagic }}" ]; then
            echo "ERROR: Unexpected vermagic: $VERMAGIC"
            exit 1
          fi

      - name: Build AmneziaWG
        run: |
          cd owrt
          make ./package/awg/kmod-amneziawg/compile -i -j$(nproc) V=s
          make ./package/awg/luci-proto-amneziawg/compile -i -j$(nproc) V=s
          make ./package/awg/amneziawg-tools/compile -i -j$(nproc) V=s

          mkdir -p awg
          cp bin/packages/aarch64_cortex-a53/base/amneziawg-tools_*.ipk awg/amneziawg-tools_${{ env.gl_version }}.ipk
          cp bin/packages/aarch64_cortex-a53/base/luci-proto-amneziawg_*.ipk awg/luci-proto-amneziawg_${{ env.gl_version }}.ipk
          cp bin/targets/mediatek/filogic/packages/kmod-amneziawg_*.ipk awg/kmod-amneziawg_${{ env.gl_version }}.ipk

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: AmneziaWG OpenWRT v${{ env.gl_version }}
          tag_name: AmneziaWG_OpenWRT_v${{ env.gl_version }}
          files: owrt/awg/*.ipk
